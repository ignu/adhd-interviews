import { createGraphQLHandler } from '@redwoodjs/graphql-server';
let directives = {};
import * as directives_requireAuth_requireAuth from "../directives/requireAuth/requireAuth";
directives.requireAuth_requireAuth = directives_requireAuth_requireAuth;
import * as directives_skipAuth_skipAuth from "../directives/skipAuth/skipAuth";
directives.skipAuth_skipAuth = directives_skipAuth_skipAuth;
let sdls = {};
import * as sdls_behavioralQuestions_sdl from "../graphql/behavioralQuestions.sdl";
sdls.behavioralQuestions_sdl = sdls_behavioralQuestions_sdl;
let services = {};
import * as services_behavioralQuestions_behavioralQuestions from "../services/behavioralQuestions/behavioralQuestions";
services.behavioralQuestions_behavioralQuestions = services_behavioralQuestions_behavioralQuestions;
import { getCurrentUser } from "../lib/auth";
import { db } from "../lib/db";
import { logger } from "../lib/logger";
export const handler = createGraphQLHandler({
  getCurrentUser,
  loggerConfig: {
    logger,
    options: {}
  },
  directives,
  sdls,
  services,
  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVHcmFwaFFMSGFuZGxlciIsImdldEN1cnJlbnRVc2VyIiwiZGIiLCJsb2dnZXIiLCJoYW5kbGVyIiwibG9nZ2VyQ29uZmlnIiwib3B0aW9ucyIsImRpcmVjdGl2ZXMiLCJzZGxzIiwic2VydmljZXMiLCJvbkV4Y2VwdGlvbiIsIiRkaXNjb25uZWN0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vYXBpL3NyYy9mdW5jdGlvbnMvZ3JhcGhxbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVHcmFwaFFMSGFuZGxlciB9IGZyb20gJ0ByZWR3b29kanMvZ3JhcGhxbC1zZXJ2ZXInXG5cbmltcG9ydCBkaXJlY3RpdmVzIGZyb20gJ3NyYy9kaXJlY3RpdmVzLyoqLyoue2pzLHRzfSdcbmltcG9ydCBzZGxzIGZyb20gJ3NyYy9ncmFwaHFsLyoqLyouc2RsLntqcyx0c30nXG5pbXBvcnQgc2VydmljZXMgZnJvbSAnc3JjL3NlcnZpY2VzLyoqLyoue2pzLHRzfSdcblxuaW1wb3J0IHsgZ2V0Q3VycmVudFVzZXIgfSBmcm9tICdzcmMvbGliL2F1dGgnXG5cbmltcG9ydCB7IGRiIH0gZnJvbSAnc3JjL2xpYi9kYidcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ3NyYy9saWIvbG9nZ2VyJ1xuXG5leHBvcnQgY29uc3QgaGFuZGxlciA9IGNyZWF0ZUdyYXBoUUxIYW5kbGVyKHtcbiAgZ2V0Q3VycmVudFVzZXIsXG4gIGxvZ2dlckNvbmZpZzogeyBsb2dnZXIsIG9wdGlvbnM6IHt9IH0sXG4gIGRpcmVjdGl2ZXMsXG4gIHNkbHMsXG4gIHNlcnZpY2VzLFxuICBvbkV4Y2VwdGlvbjogKCkgPT4ge1xuICAgIC8vIERpc2Nvbm5lY3QgZnJvbSB5b3VyIGRhdGFiYXNlIHdpdGggYW4gdW5oYW5kbGVkIGV4Y2VwdGlvbi5cbiAgICBkYi4kZGlzY29ubmVjdCgpXG4gIH0sXG59KVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxvQkFBVCxRQUFxQywyQkFBckM7Ozs7Ozs7Ozs7OztBQU1BLFNBQVNDLGNBQVQ7QUFFQSxTQUFTQyxFQUFUO0FBQ0EsU0FBU0MsTUFBVDtBQUVBLE9BQU8sTUFBTUMsT0FBTyxHQUFHSixvQkFBb0IsQ0FBQztFQUMxQ0MsY0FEMEM7RUFFMUNJLFlBQVksRUFBRTtJQUFFRixNQUFGO0lBQVVHLE9BQU8sRUFBRTtFQUFuQixDQUY0QjtFQUcxQ0MsVUFIMEM7RUFJMUNDLElBSjBDO0VBSzFDQyxRQUwwQztFQU0xQ0MsV0FBVyxFQUFFLE1BQU07SUFDakI7SUFDQVIsRUFBRSxDQUFDUyxXQUFIO0VBQ0Q7QUFUeUMsQ0FBRCxDQUFwQyJ9